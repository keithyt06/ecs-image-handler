"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Jimp = require("jimp");
const sharp = require("sharp");
const rounded_corners_1 = require("../../../src/processor/image/rounded-corners");
const utils_1 = require("./utils");
test('rounded-corner validate', async () => {
    const ctx = await (0, utils_1.mkctx)('example.jpg');
    const action = new rounded_corners_1.RoundedCornersAction();
    await action.process(ctx, 'rounded-corners,r_100'.split(','));
    const { data, info } = await ctx.image.png().toBuffer({ resolveWithObject: true });
    const w = info.width;
    const h = info.height;
    expect(info.channels).toBe(4);
    expect(info.format).toBe(sharp.format.png.id);
    const pic = await Jimp.read(data);
    expect(pic.getPixelColor(0, 0)).toBe(0);
    expect(pic.getPixelColor(0, w)).toBe(0);
    expect(pic.getPixelColor(0, h)).toBe(0);
    expect(pic.getPixelColor(w, h)).toBe(0);
});
test('quality action validate', () => {
    const action = new rounded_corners_1.RoundedCornersAction();
    const param1 = action.validate('rounded-corners,r_30'.split(','));
    expect(param1).toEqual({ r: 30 });
    expect(() => {
        action.validate('rounded-corners,r_'.split(','));
    }).toThrowError(/must be between 1 and 4096/);
    expect(() => {
        action.validate('blur,xx'.split(','));
    }).toThrowError(/Unkown param/);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91bmRlZC1jb3JuZXJzLnRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi90ZXN0L3Byb2Nlc3Nvci9pbWFnZS9yb3VuZGVkLWNvcm5lcnMudGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDZCQUE2QjtBQUM3QiwrQkFBK0I7QUFDL0Isa0ZBQW9GO0FBQ3BGLG1DQUFnQztBQUVoQyxJQUFJLENBQUMseUJBQXlCLEVBQUUsS0FBSyxJQUFJLEVBQUU7SUFDekMsTUFBTSxHQUFHLEdBQUcsTUFBTSxJQUFBLGFBQUssRUFBQyxhQUFhLENBQUMsQ0FBQztJQUV2QyxNQUFNLE1BQU0sR0FBRyxJQUFJLHNDQUFvQixFQUFFLENBQUM7SUFDMUMsTUFBTSxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSx1QkFBdUIsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUU5RCxNQUFNLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLE1BQU0sR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxpQkFBaUIsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBRW5GLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDckIsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUV0QixNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM5QixNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUU5QyxNQUFNLEdBQUcsR0FBRyxNQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbEMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3hDLE1BQU0sQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN4QyxNQUFNLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDeEMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzFDLENBQUMsQ0FBQyxDQUFDO0FBRUgsSUFBSSxDQUFDLHlCQUF5QixFQUFFLEdBQUcsRUFBRTtJQUNuQyxNQUFNLE1BQU0sR0FBRyxJQUFJLHNDQUFvQixFQUFFLENBQUM7SUFDMUMsTUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxzQkFBc0IsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUVsRSxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDbEMsTUFBTSxDQUFDLEdBQUcsRUFBRTtRQUNWLE1BQU0sQ0FBQyxRQUFRLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDbkQsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLDRCQUE0QixDQUFDLENBQUM7SUFDOUMsTUFBTSxDQUFDLEdBQUcsRUFBRTtRQUNWLE1BQU0sQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ3hDLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUNsQyxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEppbXAgZnJvbSAnamltcCc7XG5pbXBvcnQgKiBhcyBzaGFycCBmcm9tICdzaGFycCc7XG5pbXBvcnQgeyBSb3VuZGVkQ29ybmVyc0FjdGlvbiB9IGZyb20gJy4uLy4uLy4uL3NyYy9wcm9jZXNzb3IvaW1hZ2Uvcm91bmRlZC1jb3JuZXJzJztcbmltcG9ydCB7IG1rY3R4IH0gZnJvbSAnLi91dGlscyc7XG5cbnRlc3QoJ3JvdW5kZWQtY29ybmVyIHZhbGlkYXRlJywgYXN5bmMgKCkgPT4ge1xuICBjb25zdCBjdHggPSBhd2FpdCBta2N0eCgnZXhhbXBsZS5qcGcnKTtcblxuICBjb25zdCBhY3Rpb24gPSBuZXcgUm91bmRlZENvcm5lcnNBY3Rpb24oKTtcbiAgYXdhaXQgYWN0aW9uLnByb2Nlc3MoY3R4LCAncm91bmRlZC1jb3JuZXJzLHJfMTAwJy5zcGxpdCgnLCcpKTtcblxuICBjb25zdCB7IGRhdGEsIGluZm8gfSA9IGF3YWl0IGN0eC5pbWFnZS5wbmcoKS50b0J1ZmZlcih7IHJlc29sdmVXaXRoT2JqZWN0OiB0cnVlIH0pO1xuXG4gIGNvbnN0IHcgPSBpbmZvLndpZHRoO1xuICBjb25zdCBoID0gaW5mby5oZWlnaHQ7XG5cbiAgZXhwZWN0KGluZm8uY2hhbm5lbHMpLnRvQmUoNCk7XG4gIGV4cGVjdChpbmZvLmZvcm1hdCkudG9CZShzaGFycC5mb3JtYXQucG5nLmlkKTtcblxuICBjb25zdCBwaWMgPSBhd2FpdCBKaW1wLnJlYWQoZGF0YSk7XG4gIGV4cGVjdChwaWMuZ2V0UGl4ZWxDb2xvcigwLCAwKSkudG9CZSgwKTtcbiAgZXhwZWN0KHBpYy5nZXRQaXhlbENvbG9yKDAsIHcpKS50b0JlKDApO1xuICBleHBlY3QocGljLmdldFBpeGVsQ29sb3IoMCwgaCkpLnRvQmUoMCk7XG4gIGV4cGVjdChwaWMuZ2V0UGl4ZWxDb2xvcih3LCBoKSkudG9CZSgwKTtcbn0pO1xuXG50ZXN0KCdxdWFsaXR5IGFjdGlvbiB2YWxpZGF0ZScsICgpID0+IHtcbiAgY29uc3QgYWN0aW9uID0gbmV3IFJvdW5kZWRDb3JuZXJzQWN0aW9uKCk7XG4gIGNvbnN0IHBhcmFtMSA9IGFjdGlvbi52YWxpZGF0ZSgncm91bmRlZC1jb3JuZXJzLHJfMzAnLnNwbGl0KCcsJykpO1xuXG4gIGV4cGVjdChwYXJhbTEpLnRvRXF1YWwoeyByOiAzMCB9KTtcbiAgZXhwZWN0KCgpID0+IHtcbiAgICBhY3Rpb24udmFsaWRhdGUoJ3JvdW5kZWQtY29ybmVycyxyXycuc3BsaXQoJywnKSk7XG4gIH0pLnRvVGhyb3dFcnJvcigvbXVzdCBiZSBiZXR3ZWVuIDEgYW5kIDQwOTYvKTtcbiAgZXhwZWN0KCgpID0+IHtcbiAgICBhY3Rpb24udmFsaWRhdGUoJ2JsdXIseHgnLnNwbGl0KCcsJykpO1xuICB9KS50b1Rocm93RXJyb3IoL1Vua293biBwYXJhbS8pO1xufSk7XG4iXX0=