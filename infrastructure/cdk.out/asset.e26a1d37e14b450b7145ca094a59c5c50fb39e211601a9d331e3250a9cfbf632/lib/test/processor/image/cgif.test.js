"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const sharp = require("sharp");
const cgif_1 = require("../../../src/processor/image/cgif");
const utils_1 = require("./utils");
test('cgif,s_5', async () => {
    const ctx = await (0, utils_1.mkctx)('example.gif');
    const action = new cgif_1.CgifAction();
    await action.beforeNewContext(ctx, 'cgif,s_5'.split(','));
    const { info } = await ctx.image.gif().toBuffer({ resolveWithObject: true });
    expect(info.format).toBe(sharp.format.gif.id);
});
test('cgif beforeNewContext', async () => {
    const ctx = await (0, utils_1.mkctx)('example.gif');
    const action = new cgif_1.CgifAction();
    expect(() => {
        action.beforeNewContext(ctx, 'cgif,s'.split(','));
    }).toThrowError(/Unkown param: \"s\"/);
    expect(() => {
        action.beforeNewContext(ctx, 'cgif,s_d'.split(','));
    }).toThrowError(/Unkown param: \"s\"/);
    expect(() => {
        action.beforeNewContext(ctx, 'cgif'.split(','));
    }).toThrowError(/Cut gif param error, e.g: cgif,s_1/);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2dpZi50ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vdGVzdC9wcm9jZXNzb3IvaW1hZ2UvY2dpZi50ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQStCO0FBQy9CLDREQUErRDtBQUMvRCxtQ0FBZ0M7QUFHaEMsSUFBSSxDQUFDLFVBQVUsRUFBRSxLQUFLLElBQUksRUFBRTtJQUMxQixNQUFNLEdBQUcsR0FBRyxNQUFNLElBQUEsYUFBSyxFQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ3ZDLE1BQU0sTUFBTSxHQUFHLElBQUksaUJBQVUsRUFBRSxDQUFDO0lBQ2hDLE1BQU0sTUFBTSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsRUFBRSxVQUFVLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDMUQsTUFBTSxFQUFFLElBQUksRUFBRSxHQUFHLE1BQU0sR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxpQkFBaUIsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQzdFLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ2hELENBQUMsQ0FBQyxDQUFDO0FBRUgsSUFBSSxDQUFDLHVCQUF1QixFQUFFLEtBQUssSUFBSSxFQUFFO0lBQ3ZDLE1BQU0sR0FBRyxHQUFHLE1BQU0sSUFBQSxhQUFLLEVBQUMsYUFBYSxDQUFDLENBQUM7SUFDdkMsTUFBTSxNQUFNLEdBQUcsSUFBSSxpQkFBVSxFQUFFLENBQUM7SUFFaEMsTUFBTSxDQUFDLEdBQUcsRUFBRTtRQUNWLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ3BELENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0lBRXZDLE1BQU0sQ0FBQyxHQUFHLEVBQUU7UUFDVixNQUFNLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxFQUFFLFVBQVUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUN0RCxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMscUJBQXFCLENBQUMsQ0FBQztJQUV2QyxNQUFNLENBQUMsR0FBRyxFQUFFO1FBQ1YsTUFBTSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDbEQsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLG9DQUFvQyxDQUFDLENBQUM7QUFDeEQsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBzaGFycCBmcm9tICdzaGFycCc7XG5pbXBvcnQgeyBDZ2lmQWN0aW9uIH0gZnJvbSAnLi4vLi4vLi4vc3JjL3Byb2Nlc3Nvci9pbWFnZS9jZ2lmJztcbmltcG9ydCB7IG1rY3R4IH0gZnJvbSAnLi91dGlscyc7XG5cblxudGVzdCgnY2dpZixzXzUnLCBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IGN0eCA9IGF3YWl0IG1rY3R4KCdleGFtcGxlLmdpZicpO1xuICBjb25zdCBhY3Rpb24gPSBuZXcgQ2dpZkFjdGlvbigpO1xuICBhd2FpdCBhY3Rpb24uYmVmb3JlTmV3Q29udGV4dChjdHgsICdjZ2lmLHNfNScuc3BsaXQoJywnKSk7XG4gIGNvbnN0IHsgaW5mbyB9ID0gYXdhaXQgY3R4LmltYWdlLmdpZigpLnRvQnVmZmVyKHsgcmVzb2x2ZVdpdGhPYmplY3Q6IHRydWUgfSk7XG4gIGV4cGVjdChpbmZvLmZvcm1hdCkudG9CZShzaGFycC5mb3JtYXQuZ2lmLmlkKTtcbn0pO1xuXG50ZXN0KCdjZ2lmIGJlZm9yZU5ld0NvbnRleHQnLCBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IGN0eCA9IGF3YWl0IG1rY3R4KCdleGFtcGxlLmdpZicpO1xuICBjb25zdCBhY3Rpb24gPSBuZXcgQ2dpZkFjdGlvbigpO1xuXG4gIGV4cGVjdCgoKSA9PiB7XG4gICAgYWN0aW9uLmJlZm9yZU5ld0NvbnRleHQoY3R4LCAnY2dpZixzJy5zcGxpdCgnLCcpKTtcbiAgfSkudG9UaHJvd0Vycm9yKC9Vbmtvd24gcGFyYW06IFxcXCJzXFxcIi8pO1xuXG4gIGV4cGVjdCgoKSA9PiB7XG4gICAgYWN0aW9uLmJlZm9yZU5ld0NvbnRleHQoY3R4LCAnY2dpZixzX2QnLnNwbGl0KCcsJykpO1xuICB9KS50b1Rocm93RXJyb3IoL1Vua293biBwYXJhbTogXFxcInNcXFwiLyk7XG5cbiAgZXhwZWN0KCgpID0+IHtcbiAgICBhY3Rpb24uYmVmb3JlTmV3Q29udGV4dChjdHgsICdjZ2lmJy5zcGxpdCgnLCcpKTtcbiAgfSkudG9UaHJvd0Vycm9yKC9DdXQgZ2lmIHBhcmFtIGVycm9yLCBlLmc6IGNnaWYsc18xLyk7XG59KTsiXX0=