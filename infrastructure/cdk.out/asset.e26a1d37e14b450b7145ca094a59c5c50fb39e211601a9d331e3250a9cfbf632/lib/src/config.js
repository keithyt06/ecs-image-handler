"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
const { REGION, AWS_REGION, NODE_ENV, BUCKET, SRC_BUCKET, SRC_BUCKETS, STYLE_TABLE_NAME, AUTO_WEBP, AUTO_AVIF, SECRET_NAME, SHARP_QUEUE_LIMIT, CONFIG_JSON_PARAMETER_NAME, CACHE_TTL_SEC, CACHE_MAX_ITEMS, CACHE_MAX_SIZE_MB, } = process.env;
function parseInt(s) {
    return Number.parseInt(s, 10);
}
// Parse comma-separated bucket list
function parseBuckets(bucketStr) {
    if (!bucketStr)
        return [];
    return bucketStr.split(',').map(b => b.trim()).filter(b => b.length > 0);
}
// Get default bucket and bucket list
const defaultBucket = BUCKET || SRC_BUCKET || 'sih-input';
const bucketList = parseBuckets(SRC_BUCKETS);
// If no buckets specified in SRC_BUCKETS, use the default bucket
const srcBuckets = bucketList.length > 0 ? bucketList : [defaultBucket];
const conf = {
    port: 8080,
    region: (_a = REGION !== null && REGION !== void 0 ? REGION : AWS_REGION) !== null && _a !== void 0 ? _a : 'us-west-2',
    isProd: NODE_ENV === 'production',
    srcBucket: defaultBucket,
    srcBuckets: srcBuckets,
    styleTableName: STYLE_TABLE_NAME || 'style-table-name',
    autoWebp: ['yes', '1', 'true'].includes((AUTO_WEBP !== null && AUTO_WEBP !== void 0 ? AUTO_WEBP : '').toLowerCase()),
    autoAvif: ['yes', '1', 'true'].includes((AUTO_AVIF !== null && AUTO_AVIF !== void 0 ? AUTO_AVIF : '').toLowerCase()),
    secretName: SECRET_NAME !== null && SECRET_NAME !== void 0 ? SECRET_NAME : 'X-Client-Authorization',
    sharpQueueLimit: parseInt(SHARP_QUEUE_LIMIT !== null && SHARP_QUEUE_LIMIT !== void 0 ? SHARP_QUEUE_LIMIT : '1'),
    configJsonParameterName: CONFIG_JSON_PARAMETER_NAME !== null && CONFIG_JSON_PARAMETER_NAME !== void 0 ? CONFIG_JSON_PARAMETER_NAME : '',
    CACHE_TTL_SEC: parseInt(CACHE_TTL_SEC !== null && CACHE_TTL_SEC !== void 0 ? CACHE_TTL_SEC : '300'),
    CACHE_MAX_ITEMS: parseInt(CACHE_MAX_ITEMS !== null && CACHE_MAX_ITEMS !== void 0 ? CACHE_MAX_ITEMS : '10000'),
    CACHE_MAX_SIZE_MB: parseInt(CACHE_MAX_SIZE_MB !== null && CACHE_MAX_SIZE_MB !== void 0 ? CACHE_MAX_SIZE_MB : '1024'),
};
exports.default = conf;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxNQUFNLEVBQ0osTUFBTSxFQUNOLFVBQVUsRUFDVixRQUFRLEVBQ1IsTUFBTSxFQUNOLFVBQVUsRUFDVixXQUFXLEVBQ1gsZ0JBQWdCLEVBQ2hCLFNBQVMsRUFDVCxTQUFTLEVBQ1QsV0FBVyxFQUNYLGlCQUFpQixFQUNqQiwwQkFBMEIsRUFDMUIsYUFBYSxFQUNiLGVBQWUsRUFDZixpQkFBaUIsR0FDbEIsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDO0FBbUJoQixTQUFTLFFBQVEsQ0FBQyxDQUFTO0lBQ3pCLE9BQU8sTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDaEMsQ0FBQztBQUVELG9DQUFvQztBQUNwQyxTQUFTLFlBQVksQ0FBQyxTQUFrQjtJQUN0QyxJQUFJLENBQUMsU0FBUztRQUFFLE9BQU8sRUFBRSxDQUFDO0lBQzFCLE9BQU8sU0FBUyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQzNFLENBQUM7QUFFRCxxQ0FBcUM7QUFDckMsTUFBTSxhQUFhLEdBQUcsTUFBTSxJQUFJLFVBQVUsSUFBSSxXQUFXLENBQUM7QUFDMUQsTUFBTSxVQUFVLEdBQUcsWUFBWSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBRTdDLGlFQUFpRTtBQUNqRSxNQUFNLFVBQVUsR0FBRyxVQUFVLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBRXhFLE1BQU0sSUFBSSxHQUFZO0lBQ3BCLElBQUksRUFBRSxJQUFJO0lBQ1YsTUFBTSxFQUFFLE1BQUEsTUFBTSxhQUFOLE1BQU0sY0FBTixNQUFNLEdBQUksVUFBVSxtQ0FBSSxXQUFXO0lBQzNDLE1BQU0sRUFBRSxRQUFRLEtBQUssWUFBWTtJQUNqQyxTQUFTLEVBQUUsYUFBYTtJQUN4QixVQUFVLEVBQUUsVUFBVTtJQUN0QixjQUFjLEVBQUUsZ0JBQWdCLElBQUksa0JBQWtCO0lBQ3RELFFBQVEsRUFBRSxDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsU0FBUyxhQUFULFNBQVMsY0FBVCxTQUFTLEdBQUksRUFBRSxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDeEUsUUFBUSxFQUFFLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxTQUFTLGFBQVQsU0FBUyxjQUFULFNBQVMsR0FBSSxFQUFFLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUN4RSxVQUFVLEVBQUUsV0FBVyxhQUFYLFdBQVcsY0FBWCxXQUFXLEdBQUksd0JBQXdCO0lBQ25ELGVBQWUsRUFBRSxRQUFRLENBQUMsaUJBQWlCLGFBQWpCLGlCQUFpQixjQUFqQixpQkFBaUIsR0FBSSxHQUFHLENBQUM7SUFDbkQsdUJBQXVCLEVBQUUsMEJBQTBCLGFBQTFCLDBCQUEwQixjQUExQiwwQkFBMEIsR0FBSSxFQUFFO0lBQ3pELGFBQWEsRUFBRSxRQUFRLENBQUMsYUFBYSxhQUFiLGFBQWEsY0FBYixhQUFhLEdBQUksS0FBSyxDQUFDO0lBQy9DLGVBQWUsRUFBRSxRQUFRLENBQUMsZUFBZSxhQUFmLGVBQWUsY0FBZixlQUFlLEdBQUksT0FBTyxDQUFDO0lBQ3JELGlCQUFpQixFQUFFLFFBQVEsQ0FBQyxpQkFBaUIsYUFBakIsaUJBQWlCLGNBQWpCLGlCQUFpQixHQUFJLE1BQU0sQ0FBQztDQUN6RCxDQUFDO0FBRUYsa0JBQWUsSUFBSSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qge1xuICBSRUdJT04sXG4gIEFXU19SRUdJT04sXG4gIE5PREVfRU5WLFxuICBCVUNLRVQsXG4gIFNSQ19CVUNLRVQsXG4gIFNSQ19CVUNLRVRTLFxuICBTVFlMRV9UQUJMRV9OQU1FLFxuICBBVVRPX1dFQlAsXG4gIEFVVE9fQVZJRixcbiAgU0VDUkVUX05BTUUsXG4gIFNIQVJQX1FVRVVFX0xJTUlULFxuICBDT05GSUdfSlNPTl9QQVJBTUVURVJfTkFNRSxcbiAgQ0FDSEVfVFRMX1NFQyxcbiAgQ0FDSEVfTUFYX0lURU1TLFxuICBDQUNIRV9NQVhfU0laRV9NQixcbn0gPSBwcm9jZXNzLmVudjtcblxuZXhwb3J0IGludGVyZmFjZSBJQ29uZmlnIHtcbiAgcG9ydDogbnVtYmVyO1xuICByZWdpb246IHN0cmluZztcbiAgaXNQcm9kOiBib29sZWFuO1xuICBzcmNCdWNrZXQ6IHN0cmluZztcbiAgc3JjQnVja2V0czogc3RyaW5nW107XG4gIHN0eWxlVGFibGVOYW1lOiBzdHJpbmc7XG4gIGF1dG9XZWJwOiBib29sZWFuO1xuICBhdXRvQXZpZjogYm9vbGVhbjtcbiAgc2VjcmV0TmFtZTogc3RyaW5nO1xuICBzaGFycFF1ZXVlTGltaXQ6IG51bWJlcjtcbiAgY29uZmlnSnNvblBhcmFtZXRlck5hbWU6IHN0cmluZztcbiAgQ0FDSEVfVFRMX1NFQzogbnVtYmVyO1xuICBDQUNIRV9NQVhfSVRFTVM6IG51bWJlcjtcbiAgQ0FDSEVfTUFYX1NJWkVfTUI6IG51bWJlcjtcbn1cblxuZnVuY3Rpb24gcGFyc2VJbnQoczogc3RyaW5nKSB7XG4gIHJldHVybiBOdW1iZXIucGFyc2VJbnQocywgMTApO1xufVxuXG4vLyBQYXJzZSBjb21tYS1zZXBhcmF0ZWQgYnVja2V0IGxpc3RcbmZ1bmN0aW9uIHBhcnNlQnVja2V0cyhidWNrZXRTdHI/OiBzdHJpbmcpOiBzdHJpbmdbXSB7XG4gIGlmICghYnVja2V0U3RyKSByZXR1cm4gW107XG4gIHJldHVybiBidWNrZXRTdHIuc3BsaXQoJywnKS5tYXAoYiA9PiBiLnRyaW0oKSkuZmlsdGVyKGIgPT4gYi5sZW5ndGggPiAwKTtcbn1cblxuLy8gR2V0IGRlZmF1bHQgYnVja2V0IGFuZCBidWNrZXQgbGlzdFxuY29uc3QgZGVmYXVsdEJ1Y2tldCA9IEJVQ0tFVCB8fCBTUkNfQlVDS0VUIHx8ICdzaWgtaW5wdXQnO1xuY29uc3QgYnVja2V0TGlzdCA9IHBhcnNlQnVja2V0cyhTUkNfQlVDS0VUUyk7XG5cbi8vIElmIG5vIGJ1Y2tldHMgc3BlY2lmaWVkIGluIFNSQ19CVUNLRVRTLCB1c2UgdGhlIGRlZmF1bHQgYnVja2V0XG5jb25zdCBzcmNCdWNrZXRzID0gYnVja2V0TGlzdC5sZW5ndGggPiAwID8gYnVja2V0TGlzdCA6IFtkZWZhdWx0QnVja2V0XTtcblxuY29uc3QgY29uZjogSUNvbmZpZyA9IHtcbiAgcG9ydDogODA4MCxcbiAgcmVnaW9uOiBSRUdJT04gPz8gQVdTX1JFR0lPTiA/PyAndXMtd2VzdC0yJyxcbiAgaXNQcm9kOiBOT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nLFxuICBzcmNCdWNrZXQ6IGRlZmF1bHRCdWNrZXQsXG4gIHNyY0J1Y2tldHM6IHNyY0J1Y2tldHMsXG4gIHN0eWxlVGFibGVOYW1lOiBTVFlMRV9UQUJMRV9OQU1FIHx8ICdzdHlsZS10YWJsZS1uYW1lJyxcbiAgYXV0b1dlYnA6IFsneWVzJywgJzEnLCAndHJ1ZSddLmluY2x1ZGVzKChBVVRPX1dFQlAgPz8gJycpLnRvTG93ZXJDYXNlKCkpLFxuICBhdXRvQXZpZjogWyd5ZXMnLCAnMScsICd0cnVlJ10uaW5jbHVkZXMoKEFVVE9fQVZJRiA/PyAnJykudG9Mb3dlckNhc2UoKSksXG4gIHNlY3JldE5hbWU6IFNFQ1JFVF9OQU1FID8/ICdYLUNsaWVudC1BdXRob3JpemF0aW9uJyxcbiAgc2hhcnBRdWV1ZUxpbWl0OiBwYXJzZUludChTSEFSUF9RVUVVRV9MSU1JVCA/PyAnMScpLFxuICBjb25maWdKc29uUGFyYW1ldGVyTmFtZTogQ09ORklHX0pTT05fUEFSQU1FVEVSX05BTUUgPz8gJycsXG4gIENBQ0hFX1RUTF9TRUM6IHBhcnNlSW50KENBQ0hFX1RUTF9TRUMgPz8gJzMwMCcpLFxuICBDQUNIRV9NQVhfSVRFTVM6IHBhcnNlSW50KENBQ0hFX01BWF9JVEVNUyA/PyAnMTAwMDAnKSxcbiAgQ0FDSEVfTUFYX1NJWkVfTUI6IHBhcnNlSW50KENBQ0hFX01BWF9TSVpFX01CID8/ICcxMDI0JyksXG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25mO1xuIl19