"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const sharp = require("sharp");
const circle_1 = require("../../../src/processor/image/circle");
const utils_1 = require("./utils");
test('circle,r_500', async () => {
    const ctx = await (0, utils_1.mkctx)('example.jpg');
    const action = new circle_1.CircleAction();
    await action.process(ctx, 'circle,r_500'.split(','));
    const { info } = await ctx.image.png().toBuffer({ resolveWithObject: true });
    expect(info.channels).toBe(4);
    expect(info.format).toBe(sharp.format.png.id);
});
test('circle,r_100', async () => {
    const ctx = await (0, utils_1.mkctx)('example.jpg');
    const action = new circle_1.CircleAction();
    await action.process(ctx, 'circle,r_100'.split(','));
    const { info } = await ctx.image.png().toBuffer({ resolveWithObject: true });
    expect(info.channels).toBe(4);
    expect(info.format).toBe(sharp.format.png.id);
    expect(info.width).toBe(201);
    expect(info.height).toBe(201);
});
test('quality action validate', () => {
    const action = new circle_1.CircleAction();
    const param1 = action.validate('circle,r_30'.split(','));
    expect(param1).toEqual({ r: 30 });
    expect(() => {
        action.validate('circle,r_'.split(','));
    }).toThrowError(/must be between 1 and 4096/);
    expect(() => {
        action.validate('blur,xx'.split(','));
    }).toThrowError(/Unkown param/);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2lyY2xlLnRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi90ZXN0L3Byb2Nlc3Nvci9pbWFnZS9jaXJjbGUudGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUErQjtBQUMvQixnRUFBbUU7QUFDbkUsbUNBQWdDO0FBRWhDLElBQUksQ0FBQyxjQUFjLEVBQUUsS0FBSyxJQUFJLEVBQUU7SUFDOUIsTUFBTSxHQUFHLEdBQUcsTUFBTSxJQUFBLGFBQUssRUFBQyxhQUFhLENBQUMsQ0FBQztJQUV2QyxNQUFNLE1BQU0sR0FBRyxJQUFJLHFCQUFZLEVBQUUsQ0FBQztJQUNsQyxNQUFNLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLGNBQWMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUVyRCxNQUFNLEVBQUUsSUFBSSxFQUFFLEdBQUcsTUFBTSxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLGlCQUFpQixFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7SUFFN0UsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDOUIsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDaEQsQ0FBQyxDQUFDLENBQUM7QUFFSCxJQUFJLENBQUMsY0FBYyxFQUFFLEtBQUssSUFBSSxFQUFFO0lBQzlCLE1BQU0sR0FBRyxHQUFHLE1BQU0sSUFBQSxhQUFLLEVBQUMsYUFBYSxDQUFDLENBQUM7SUFFdkMsTUFBTSxNQUFNLEdBQUcsSUFBSSxxQkFBWSxFQUFFLENBQUM7SUFDbEMsTUFBTSxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxjQUFjLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFFckQsTUFBTSxFQUFFLElBQUksRUFBRSxHQUFHLE1BQU0sR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxpQkFBaUIsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBRTdFLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzlCLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzlDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzdCLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ2hDLENBQUMsQ0FBQyxDQUFDO0FBRUgsSUFBSSxDQUFDLHlCQUF5QixFQUFFLEdBQUcsRUFBRTtJQUNuQyxNQUFNLE1BQU0sR0FBRyxJQUFJLHFCQUFZLEVBQUUsQ0FBQztJQUNsQyxNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUV6RCxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDbEMsTUFBTSxDQUFDLEdBQUcsRUFBRTtRQUNWLE1BQU0sQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzFDLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO0lBQzlDLE1BQU0sQ0FBQyxHQUFHLEVBQUU7UUFDVixNQUFNLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUN4QyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsY0FBYyxDQUFDLENBQUM7QUFDbEMsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBzaGFycCBmcm9tICdzaGFycCc7XG5pbXBvcnQgeyBDaXJjbGVBY3Rpb24gfSBmcm9tICcuLi8uLi8uLi9zcmMvcHJvY2Vzc29yL2ltYWdlL2NpcmNsZSc7XG5pbXBvcnQgeyBta2N0eCB9IGZyb20gJy4vdXRpbHMnO1xuXG50ZXN0KCdjaXJjbGUscl81MDAnLCBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IGN0eCA9IGF3YWl0IG1rY3R4KCdleGFtcGxlLmpwZycpO1xuXG4gIGNvbnN0IGFjdGlvbiA9IG5ldyBDaXJjbGVBY3Rpb24oKTtcbiAgYXdhaXQgYWN0aW9uLnByb2Nlc3MoY3R4LCAnY2lyY2xlLHJfNTAwJy5zcGxpdCgnLCcpKTtcblxuICBjb25zdCB7IGluZm8gfSA9IGF3YWl0IGN0eC5pbWFnZS5wbmcoKS50b0J1ZmZlcih7IHJlc29sdmVXaXRoT2JqZWN0OiB0cnVlIH0pO1xuXG4gIGV4cGVjdChpbmZvLmNoYW5uZWxzKS50b0JlKDQpO1xuICBleHBlY3QoaW5mby5mb3JtYXQpLnRvQmUoc2hhcnAuZm9ybWF0LnBuZy5pZCk7XG59KTtcblxudGVzdCgnY2lyY2xlLHJfMTAwJywgYXN5bmMgKCkgPT4ge1xuICBjb25zdCBjdHggPSBhd2FpdCBta2N0eCgnZXhhbXBsZS5qcGcnKTtcblxuICBjb25zdCBhY3Rpb24gPSBuZXcgQ2lyY2xlQWN0aW9uKCk7XG4gIGF3YWl0IGFjdGlvbi5wcm9jZXNzKGN0eCwgJ2NpcmNsZSxyXzEwMCcuc3BsaXQoJywnKSk7XG5cbiAgY29uc3QgeyBpbmZvIH0gPSBhd2FpdCBjdHguaW1hZ2UucG5nKCkudG9CdWZmZXIoeyByZXNvbHZlV2l0aE9iamVjdDogdHJ1ZSB9KTtcblxuICBleHBlY3QoaW5mby5jaGFubmVscykudG9CZSg0KTtcbiAgZXhwZWN0KGluZm8uZm9ybWF0KS50b0JlKHNoYXJwLmZvcm1hdC5wbmcuaWQpO1xuICBleHBlY3QoaW5mby53aWR0aCkudG9CZSgyMDEpO1xuICBleHBlY3QoaW5mby5oZWlnaHQpLnRvQmUoMjAxKTtcbn0pO1xuXG50ZXN0KCdxdWFsaXR5IGFjdGlvbiB2YWxpZGF0ZScsICgpID0+IHtcbiAgY29uc3QgYWN0aW9uID0gbmV3IENpcmNsZUFjdGlvbigpO1xuICBjb25zdCBwYXJhbTEgPSBhY3Rpb24udmFsaWRhdGUoJ2NpcmNsZSxyXzMwJy5zcGxpdCgnLCcpKTtcblxuICBleHBlY3QocGFyYW0xKS50b0VxdWFsKHsgcjogMzAgfSk7XG4gIGV4cGVjdCgoKSA9PiB7XG4gICAgYWN0aW9uLnZhbGlkYXRlKCdjaXJjbGUscl8nLnNwbGl0KCcsJykpO1xuICB9KS50b1Rocm93RXJyb3IoL211c3QgYmUgYmV0d2VlbiAxIGFuZCA0MDk2Lyk7XG4gIGV4cGVjdCgoKSA9PiB7XG4gICAgYWN0aW9uLnZhbGlkYXRlKCdibHVyLHh4Jy5zcGxpdCgnLCcpKTtcbiAgfSkudG9UaHJvd0Vycm9yKC9Vbmtvd24gcGFyYW0vKTtcbn0pO1xuIl19