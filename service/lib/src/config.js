"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
const { REGION, AWS_REGION, NODE_ENV, BUCKET, SRC_BUCKET, SRC_BUCKETS, STYLE_TABLE_NAME, AUTO_WEBP, AUTO_AVIF, SECRET_NAME, SHARP_QUEUE_LIMIT, CONFIG_JSON_PARAMETER_NAME, CACHE_TTL_SEC, CACHE_MAX_ITEMS, CACHE_MAX_SIZE_MB, ALLOW_DIRECT_ACCESS, } = process.env;
function parseInt(s) {
    return Number.parseInt(s, 10);
}
// Parse comma-separated bucket list
function parseBuckets(bucketStr) {
    if (!bucketStr)
        return [];
    return bucketStr.split(',').map(b => b.trim()).filter(b => b.length > 0);
}
// Get default bucket and bucket list
const defaultBucket = BUCKET || SRC_BUCKET || 'sih-input';
const bucketList = parseBuckets(SRC_BUCKETS);
// If no buckets specified in SRC_BUCKETS, use the default bucket
const srcBuckets = bucketList.length > 0 ? bucketList : [defaultBucket];
const conf = {
    port: 8080,
    region: (_a = REGION !== null && REGION !== void 0 ? REGION : AWS_REGION) !== null && _a !== void 0 ? _a : 'us-west-2',
    isProd: NODE_ENV === 'production',
    srcBucket: defaultBucket,
    srcBuckets: srcBuckets,
    styleTableName: STYLE_TABLE_NAME || 'style-table-name',
    autoWebp: ['yes', '1', 'true'].includes((AUTO_WEBP !== null && AUTO_WEBP !== void 0 ? AUTO_WEBP : '').toLowerCase()),
    autoAvif: ['yes', '1', 'true'].includes((AUTO_AVIF !== null && AUTO_AVIF !== void 0 ? AUTO_AVIF : '').toLowerCase()),
    secretName: SECRET_NAME !== null && SECRET_NAME !== void 0 ? SECRET_NAME : 'X-Client-Authorization',
    sharpQueueLimit: parseInt(SHARP_QUEUE_LIMIT !== null && SHARP_QUEUE_LIMIT !== void 0 ? SHARP_QUEUE_LIMIT : '1'),
    configJsonParameterName: CONFIG_JSON_PARAMETER_NAME !== null && CONFIG_JSON_PARAMETER_NAME !== void 0 ? CONFIG_JSON_PARAMETER_NAME : '',
    CACHE_TTL_SEC: parseInt(CACHE_TTL_SEC !== null && CACHE_TTL_SEC !== void 0 ? CACHE_TTL_SEC : '300'),
    CACHE_MAX_ITEMS: parseInt(CACHE_MAX_ITEMS !== null && CACHE_MAX_ITEMS !== void 0 ? CACHE_MAX_ITEMS : '10000'),
    CACHE_MAX_SIZE_MB: parseInt(CACHE_MAX_SIZE_MB !== null && CACHE_MAX_SIZE_MB !== void 0 ? CACHE_MAX_SIZE_MB : '1024'),
    allowDirectAccess: ALLOW_DIRECT_ACCESS !== null && ALLOW_DIRECT_ACCESS !== void 0 ? ALLOW_DIRECT_ACCESS : 'false',
};
exports.default = conf;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxNQUFNLEVBQ0osTUFBTSxFQUNOLFVBQVUsRUFDVixRQUFRLEVBQ1IsTUFBTSxFQUNOLFVBQVUsRUFDVixXQUFXLEVBQ1gsZ0JBQWdCLEVBQ2hCLFNBQVMsRUFDVCxTQUFTLEVBQ1QsV0FBVyxFQUNYLGlCQUFpQixFQUNqQiwwQkFBMEIsRUFDMUIsYUFBYSxFQUNiLGVBQWUsRUFDZixpQkFBaUIsRUFDakIsbUJBQW1CLEdBQ3BCLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQztBQW9CaEIsU0FBUyxRQUFRLENBQUMsQ0FBUztJQUN6QixPQUFPLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ2hDLENBQUM7QUFFRCxvQ0FBb0M7QUFDcEMsU0FBUyxZQUFZLENBQUMsU0FBa0I7SUFDdEMsSUFBSSxDQUFDLFNBQVM7UUFBRSxPQUFPLEVBQUUsQ0FBQztJQUMxQixPQUFPLFNBQVMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztBQUMzRSxDQUFDO0FBRUQscUNBQXFDO0FBQ3JDLE1BQU0sYUFBYSxHQUFHLE1BQU0sSUFBSSxVQUFVLElBQUksV0FBVyxDQUFDO0FBQzFELE1BQU0sVUFBVSxHQUFHLFlBQVksQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUU3QyxpRUFBaUU7QUFDakUsTUFBTSxVQUFVLEdBQUcsVUFBVSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUV4RSxNQUFNLElBQUksR0FBWTtJQUNwQixJQUFJLEVBQUUsSUFBSTtJQUNWLE1BQU0sRUFBRSxNQUFBLE1BQU0sYUFBTixNQUFNLGNBQU4sTUFBTSxHQUFJLFVBQVUsbUNBQUksV0FBVztJQUMzQyxNQUFNLEVBQUUsUUFBUSxLQUFLLFlBQVk7SUFDakMsU0FBUyxFQUFFLGFBQWE7SUFDeEIsVUFBVSxFQUFFLFVBQVU7SUFDdEIsY0FBYyxFQUFFLGdCQUFnQixJQUFJLGtCQUFrQjtJQUN0RCxRQUFRLEVBQUUsQ0FBQyxLQUFLLEVBQUUsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLFNBQVMsYUFBVCxTQUFTLGNBQVQsU0FBUyxHQUFJLEVBQUUsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3hFLFFBQVEsRUFBRSxDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsU0FBUyxhQUFULFNBQVMsY0FBVCxTQUFTLEdBQUksRUFBRSxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDeEUsVUFBVSxFQUFFLFdBQVcsYUFBWCxXQUFXLGNBQVgsV0FBVyxHQUFJLHdCQUF3QjtJQUNuRCxlQUFlLEVBQUUsUUFBUSxDQUFDLGlCQUFpQixhQUFqQixpQkFBaUIsY0FBakIsaUJBQWlCLEdBQUksR0FBRyxDQUFDO0lBQ25ELHVCQUF1QixFQUFFLDBCQUEwQixhQUExQiwwQkFBMEIsY0FBMUIsMEJBQTBCLEdBQUksRUFBRTtJQUN6RCxhQUFhLEVBQUUsUUFBUSxDQUFDLGFBQWEsYUFBYixhQUFhLGNBQWIsYUFBYSxHQUFJLEtBQUssQ0FBQztJQUMvQyxlQUFlLEVBQUUsUUFBUSxDQUFDLGVBQWUsYUFBZixlQUFlLGNBQWYsZUFBZSxHQUFJLE9BQU8sQ0FBQztJQUNyRCxpQkFBaUIsRUFBRSxRQUFRLENBQUMsaUJBQWlCLGFBQWpCLGlCQUFpQixjQUFqQixpQkFBaUIsR0FBSSxNQUFNLENBQUM7SUFDeEQsaUJBQWlCLEVBQUUsbUJBQW1CLGFBQW5CLG1CQUFtQixjQUFuQixtQkFBbUIsR0FBSSxPQUFPO0NBQ2xELENBQUM7QUFFRixrQkFBZSxJQUFJLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7XG4gIFJFR0lPTixcbiAgQVdTX1JFR0lPTixcbiAgTk9ERV9FTlYsXG4gIEJVQ0tFVCxcbiAgU1JDX0JVQ0tFVCxcbiAgU1JDX0JVQ0tFVFMsXG4gIFNUWUxFX1RBQkxFX05BTUUsXG4gIEFVVE9fV0VCUCxcbiAgQVVUT19BVklGLFxuICBTRUNSRVRfTkFNRSxcbiAgU0hBUlBfUVVFVUVfTElNSVQsXG4gIENPTkZJR19KU09OX1BBUkFNRVRFUl9OQU1FLFxuICBDQUNIRV9UVExfU0VDLFxuICBDQUNIRV9NQVhfSVRFTVMsXG4gIENBQ0hFX01BWF9TSVpFX01CLFxuICBBTExPV19ESVJFQ1RfQUNDRVNTLFxufSA9IHByb2Nlc3MuZW52O1xuXG5leHBvcnQgaW50ZXJmYWNlIElDb25maWcge1xuICBwb3J0OiBudW1iZXI7XG4gIHJlZ2lvbjogc3RyaW5nO1xuICBpc1Byb2Q6IGJvb2xlYW47XG4gIHNyY0J1Y2tldDogc3RyaW5nO1xuICBzcmNCdWNrZXRzOiBzdHJpbmdbXTtcbiAgc3R5bGVUYWJsZU5hbWU6IHN0cmluZztcbiAgYXV0b1dlYnA6IGJvb2xlYW47XG4gIGF1dG9BdmlmOiBib29sZWFuO1xuICBzZWNyZXROYW1lOiBzdHJpbmc7XG4gIHNoYXJwUXVldWVMaW1pdDogbnVtYmVyO1xuICBjb25maWdKc29uUGFyYW1ldGVyTmFtZTogc3RyaW5nO1xuICBDQUNIRV9UVExfU0VDOiBudW1iZXI7XG4gIENBQ0hFX01BWF9JVEVNUzogbnVtYmVyO1xuICBDQUNIRV9NQVhfU0laRV9NQjogbnVtYmVyO1xuICBhbGxvd0RpcmVjdEFjY2Vzczogc3RyaW5nO1xufVxuXG5mdW5jdGlvbiBwYXJzZUludChzOiBzdHJpbmcpIHtcbiAgcmV0dXJuIE51bWJlci5wYXJzZUludChzLCAxMCk7XG59XG5cbi8vIFBhcnNlIGNvbW1hLXNlcGFyYXRlZCBidWNrZXQgbGlzdFxuZnVuY3Rpb24gcGFyc2VCdWNrZXRzKGJ1Y2tldFN0cj86IHN0cmluZyk6IHN0cmluZ1tdIHtcbiAgaWYgKCFidWNrZXRTdHIpIHJldHVybiBbXTtcbiAgcmV0dXJuIGJ1Y2tldFN0ci5zcGxpdCgnLCcpLm1hcChiID0+IGIudHJpbSgpKS5maWx0ZXIoYiA9PiBiLmxlbmd0aCA+IDApO1xufVxuXG4vLyBHZXQgZGVmYXVsdCBidWNrZXQgYW5kIGJ1Y2tldCBsaXN0XG5jb25zdCBkZWZhdWx0QnVja2V0ID0gQlVDS0VUIHx8IFNSQ19CVUNLRVQgfHwgJ3NpaC1pbnB1dCc7XG5jb25zdCBidWNrZXRMaXN0ID0gcGFyc2VCdWNrZXRzKFNSQ19CVUNLRVRTKTtcblxuLy8gSWYgbm8gYnVja2V0cyBzcGVjaWZpZWQgaW4gU1JDX0JVQ0tFVFMsIHVzZSB0aGUgZGVmYXVsdCBidWNrZXRcbmNvbnN0IHNyY0J1Y2tldHMgPSBidWNrZXRMaXN0Lmxlbmd0aCA+IDAgPyBidWNrZXRMaXN0IDogW2RlZmF1bHRCdWNrZXRdO1xuXG5jb25zdCBjb25mOiBJQ29uZmlnID0ge1xuICBwb3J0OiA4MDgwLFxuICByZWdpb246IFJFR0lPTiA/PyBBV1NfUkVHSU9OID8/ICd1cy13ZXN0LTInLFxuICBpc1Byb2Q6IE5PREVfRU5WID09PSAncHJvZHVjdGlvbicsXG4gIHNyY0J1Y2tldDogZGVmYXVsdEJ1Y2tldCxcbiAgc3JjQnVja2V0czogc3JjQnVja2V0cyxcbiAgc3R5bGVUYWJsZU5hbWU6IFNUWUxFX1RBQkxFX05BTUUgfHwgJ3N0eWxlLXRhYmxlLW5hbWUnLFxuICBhdXRvV2VicDogWyd5ZXMnLCAnMScsICd0cnVlJ10uaW5jbHVkZXMoKEFVVE9fV0VCUCA/PyAnJykudG9Mb3dlckNhc2UoKSksXG4gIGF1dG9BdmlmOiBbJ3llcycsICcxJywgJ3RydWUnXS5pbmNsdWRlcygoQVVUT19BVklGID8/ICcnKS50b0xvd2VyQ2FzZSgpKSxcbiAgc2VjcmV0TmFtZTogU0VDUkVUX05BTUUgPz8gJ1gtQ2xpZW50LUF1dGhvcml6YXRpb24nLFxuICBzaGFycFF1ZXVlTGltaXQ6IHBhcnNlSW50KFNIQVJQX1FVRVVFX0xJTUlUID8/ICcxJyksXG4gIGNvbmZpZ0pzb25QYXJhbWV0ZXJOYW1lOiBDT05GSUdfSlNPTl9QQVJBTUVURVJfTkFNRSA/PyAnJyxcbiAgQ0FDSEVfVFRMX1NFQzogcGFyc2VJbnQoQ0FDSEVfVFRMX1NFQyA/PyAnMzAwJyksXG4gIENBQ0hFX01BWF9JVEVNUzogcGFyc2VJbnQoQ0FDSEVfTUFYX0lURU1TID8/ICcxMDAwMCcpLFxuICBDQUNIRV9NQVhfU0laRV9NQjogcGFyc2VJbnQoQ0FDSEVfTUFYX1NJWkVfTUIgPz8gJzEwMjQnKSxcbiAgYWxsb3dEaXJlY3RBY2Nlc3M6IEFMTE9XX0RJUkVDVF9BQ0NFU1MgPz8gJ2ZhbHNlJyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbmY7XG4iXX0=